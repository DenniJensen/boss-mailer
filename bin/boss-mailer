#!/usr/bin/env ruby

require 'boss_mailer'
require 'boss_mailer/config_deliverer'
require 'boss_mailer/time_parser'
require 'boss_mailer/mailer'
require 'optparse'
require 'mail'
require 'yaml'

options = {}
OptionParser.new do |opts|
  opts.on("--init", "inialize empty setting in home dir") do
    options[:init] = true
  end
  opts.on("--force", 'forces to create a new config file') do
    options[:force] = true
  end
end.parse!

CONFIG_PATH = ENV['HOME'] + '/.boss-mailer.yml'

if options[:init]
  if File.exists?(CONFIG_PATH) && !options[:force]
    puts "file alread exists in #{CONFIG_PATH}"
    puts "Use --init --force to reinstall config file"
    exit 1
  else
    config = BossMailer::ConfigDeliverer.config
    File.open(CONFIG_PATH, 'w') { |file| YAML.dump(config, file) }
    puts "Config File created in #{CONFIG_PATH}"
    puts "Please fill in all the information in this config file"
    exit 0
  end
end

unless File.exists? CONFIG_PATH
  puts 'No Config file found, please use --init to initialize one'
  puts 'After creating a config file, please fill in the mail informations'
  exit 1
end

config = YAML.load_file(CONFIG_PATH)
mailer_settings = config[:mail_settings]

unless mailer_settings[:to] or mailer_settings[:from] or mailer_settings[:subject]
  puts "Configuration is missing in: #{CONFIG_PATH}"
  exit 1
end

if ARGV.size < 3
  puts 'Need start, end and pause of work'
  exit 1
end

time_parser = BossMailer::TimeParser.new
working_time = {
  start: time_parser.parse(ARGV.shift),
  end: time_parser.parse(ARGV.shift),
  pause: time_parser.parse(ARGV.shift)
}

mailer = BossMailer::Mailer.new mailer_settings, working_time
mailer.mail


p working_time
